{"is_source_file": true, "format": "Python", "description": "This file contains core logic functions for a Tic-Tac-Toe game, including board initialization, move validation, move application, win/draw checking, and turn toggling.", "external_files": [], "external_methods": [], "published": ["empty_board", "is_valid_move", "make_move", "check_win", "check_draw", "next_turn"], "classes": [], "methods": [{"name": "List[List[Optional[PlayerSymbol]]] empty_board()", "description": "Initializes and returns an empty 3x3 game board with None in each cell.", "scope": "", "scopeKind": ""}, {"name": "bool is_valid_move(board: List[List[Optional[PlayerSymbol]]], x: int, y: int)", "description": "Checks if a proposed move (x,y) on the given board is valid (indices within range and cell is empty).", "scope": "", "scopeKind": ""}, {"name": "List[List[Optional[PlayerSymbol]]] make_move(board: List[List[Optional[PlayerSymbol]]], x: int, y: int, symbol: PlayerSymbol)", "description": "Returns a new board with the specified move (x,y) applied with the given player's symbol.", "scope": "", "scopeKind": ""}, {"name": "Optional[PlayerSymbol] check_win(board: List[List[Optional[PlayerSymbol]]])", "description": "Checks all possible lines (rows, columns, diagonals) for a winning condition; returns 'X', 'O', or None.", "scope": "", "scopeKind": ""}, {"name": "bool check_draw(board: List[List[Optional[PlayerSymbol]]])", "description": "Determines if the board is full and no player has won, indicating a draw.", "scope": "", "scopeKind": ""}, {"name": "PlayerSymbol next_turn(current_turn: PlayerSymbol)", "description": "Swaps the current player's turn from 'X' to 'O' or vice versa.", "scope": "", "scopeKind": ""}], "calls": ["check_win(board)"], "search-terms": ["tic-tac-toe", "core game logic", "board initialization", "move validation", "win check", "draw check", "turn toggle"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "PlayerSymbol", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^PlayerSymbol = Literal['X', 'O']$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "check_draw", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def check_draw(board: List[List[Optional[PlayerSymbol]]]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(board: List[List[Optional[PlayerSymbol]]])"}, {"_type": "tag", "name": "check_win", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def check_win(board: List[List[Optional[PlayerSymbol]]]) -> Optional[PlayerSymbol]:$/", "language": "Python", "typeref": "typename:Optional[PlayerSymbol]", "kind": "function", "signature": "(board: List[List[Optional[PlayerSymbol]]])"}, {"_type": "tag", "name": "empty_board", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def empty_board() -> List[List[Optional[PlayerSymbol]]]:$/", "language": "Python", "typeref": "typename:List[List[Optional[PlayerSymbol]]]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "is_valid_move", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def is_valid_move(board: List[List[Optional[PlayerSymbol]]], x: int, y: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(board: List[List[Optional[PlayerSymbol]]], x: int, y: int)"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def make_move(board: List[List[Optional[PlayerSymbol]]], x: int, y: int, symbol: PlayerSymbol) -/", "language": "Python", "typeref": "typename:List[List[Optional[PlayerSymbol]]]", "kind": "function", "signature": "(board: List[List[Optional[PlayerSymbol]]], x: int, y: int, symbol: PlayerSymbol)"}, {"_type": "tag", "name": "next_turn", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/core.py", "pattern": "/^def next_turn(current_turn: PlayerSymbol) -> PlayerSymbol:$/", "language": "Python", "typeref": "typename:PlayerSymbol", "kind": "function", "signature": "(current_turn: PlayerSymbol)"}], "hash": "bf07a393db7e4d50b6cfb000163ef483", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/core.py", "fields": [{"name": "PlayerSymbol = Literal['X', 'O']", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}