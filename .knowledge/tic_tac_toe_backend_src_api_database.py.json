{"is_source_file": true, "format": "Python", "description": "This file contains database access functions for a Tic-Tac-Toe backend, including connection management, player and game CRUD operations, and move tracking.", "external_files": ["asyncpg", "os", "typing", "contextlib"], "external_methods": ["asyncpg.create_pool", "asyncpg.pool.Pool", "conn.fetchrow", "conn.execute", "conn.fetch", "pool.acquire"], "published": ["get_pool", "connect", "create_player", "get_player", "get_player_by_username", "create_game", "join_game", "get_game", "list_games", "finish_game", "update_game_board", "add_move", "get_moves_for_game"], "classes": [], "methods": [{"name": "get_pool()", "description": "Initializes and retrieves the connection pool for the database.", "scope": "", "scopeKind": ""}, {"name": "connect()", "description": "Asynchronous context manager for acquiring a database connection from the pool.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_player(username: str)", "description": "Creates a new player record in the database with a given username.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_player(player_id: int)", "description": "Fetches a player's details by their ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_player_by_username(username: str)", "description": "Retrieves a player's details using their username.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_game(player_x_id: int, player_o_id: Optional[int]=None)", "description": "Starts a new game with the specified player as 'X', optionally setting 'O' if joining later.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] join_game(game_id: int, player_o_id: int)", "description": "Allows a player to join an existing game as 'O' if the slot is vacant.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_game(game_id: int)", "description": "Fetches the details of a specific game by its ID.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] list_games(limit=20)", "description": "Provides a list of recent games, limited by the specified number.", "scope": "", "scopeKind": ""}, {"name": "None finish_game(game_id: int, winner: Optional[str])", "description": "Marks a game as finished, recording the winner if any.", "scope": "", "scopeKind": ""}, {"name": "None update_game_board(game_id: int, board: List[List[str]], next_turn: Optional[str], winner: Optional[str])", "description": "Updates the game state, including the board layout, next player's turn, and winner.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] add_move(game_id: int, player_id: int, x: int, y: int, symbol: str)", "description": "Records a move made by a player at a specific position with a symbol.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] get_moves_for_game(game_id: int)", "description": "Retrieves all moves associated with a particular game, ordered by timestamp.", "scope": "", "scopeKind": ""}], "calls": ["asyncpg.create_pool", "pool.acquire", "conn.fetchrow", "conn.execute", "conn.fetch"], "search-terms": ["asyncpg connection pool", "game creation", "player CRUD", "move tracking", "persistent game state", "PostgreSQL"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "DB_HOST", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DB_HOST = os.getenv(\"POSTGRES_URL\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_NAME", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DB_NAME = os.getenv(\"POSTGRES_DB\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_PASS", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DB_PASS = os.getenv(\"POSTGRES_PASSWORD\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_PORT", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DB_PORT = os.getenv(\"POSTGRES_PORT\", \"5432\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_USER", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DB_USER = os.getenv(\"POSTGRES_USER\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DSN", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^DSN = f\"postgresql:\\/\\/{DB_USER}:{DB_PASS}@{DB_HOST}:{DB_PORT}\\/{DB_NAME}\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_pool", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^_pool: Optional[asyncpg.pool.Pool] = None$/", "language": "Python", "typeref": "typename:Optional[asyncpg.pool.Pool]", "kind": "variable"}, {"_type": "tag", "name": "add_move", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def add_move(game_id: int, player_id: int, x: int, y: int, symbol: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(game_id: int, player_id: int, x: int, y: int, symbol: str)"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def connect():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "create_game", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def create_game(player_x_id: int, player_o_id: Optional[int]=None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(player_x_id: int, player_o_id: Optional[int]=None)"}, {"_type": "tag", "name": "create_player", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def create_player(username: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(username: str)"}, {"_type": "tag", "name": "finish_game", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def finish_game(game_id: int, winner: Optional[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(game_id: int, winner: Optional[str])"}, {"_type": "tag", "name": "get_game", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def get_game(game_id: int) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(game_id: int)"}, {"_type": "tag", "name": "get_moves_for_game", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def get_moves_for_game(game_id: int) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(game_id: int)"}, {"_type": "tag", "name": "get_player", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def get_player(player_id: int) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(player_id: int)"}, {"_type": "tag", "name": "get_player_by_username", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def get_player_by_username(username: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(username: str)"}, {"_type": "tag", "name": "get_pool", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def get_pool():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "join_game", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def join_game(game_id: int, player_o_id: int) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(game_id: int, player_o_id: int)"}, {"_type": "tag", "name": "list_games", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def list_games(limit=20) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(limit=20)"}, {"_type": "tag", "name": "update_game_board", "path": "/home/kavia/workspace/code-generation/persistent-tic-tac-toe-142496-142538/tic_tac_toe_backend/src/api/database.py", "pattern": "/^async def update_game_board(game_id: int, board: List[List[str]], next_turn: Optional[str], winn/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(game_id: int, board: List[List[str]], next_turn: Optional[str], winner: Optional[str])"}], "hash": "bfebb1e461555fda4d75ea5dfb5fedff", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/database.py", "fields": [{"name": "DB_HOST = os.getenv(\"POSTGRES_URL\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_NAME = os.getenv(\"POSTGRES_DB\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_PASS = os.getenv(\"POSTGRES_PASSWORD\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_PORT = os.getenv(\"POSTGRES_PORT\", \"5432\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_USER = os.getenv(\"POSTGRES_USER\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DSN = f\"postgresql:\\/\\/{DB_USER}:{DB_PASS}@{DB_HOST}:{DB_PORT}\\/{DB_NAME}\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[asyncpg.pool.Pool] _pool", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}